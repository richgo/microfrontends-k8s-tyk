{"ast":null,"code":"var _jsxFileName = \"/Users/Richard.James2/dev/microfrontends-dapr/accounts-app/client/account/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { gql, useQuery } from '@apollo/client';\nimport dynamic from 'next/dynamic';\nconst Header = dynamic(() => import('../components/Header'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../components/Header')],\n    modules: ['../components/Header']\n  }\n});\nconst GET_ME = gql`\nquery {\n  me {\n    name\n    username\n    reviews {\n      body\n      product {\n        name\n        upc\n      }\n    }\n  }\n}\n`;\n\nconst Account = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ME);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Hello \", data.me.name), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, data.me.reviews.map(review => __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, review.product.name), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, review.body)))), __jsx(\"a\", {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Home\"));\n};\n\nexport default Account;","map":{"version":3,"sources":["/Users/Richard.James2/dev/microfrontends-dapr/accounts-app/client/account/pages/index.js"],"names":["Link","Image","gql","useQuery","dynamic","Header","GET_ME","Account","loading","error","data","message","me","name","reviews","map","review","product","body"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,MAAMC,MAAM,GAAGD,OAAO,OAAC,OAAO,sBAAP,CAAD;AAAA;AAAA,wCAAQ,sBAAR;AAAA,cAAQ,sBAAR;AAAA;AAAA,EAAtB;AAEA,MAAME,MAAM,GAAGJ,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;;AAgBA,MAAMK,OAAO,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACG,MAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAEX,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWD,IAAI,CAACE,EAAL,CAAQC,IAAnB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,IAAI,CAACE,EAAL,CAAQE,OAAR,CAAgBC,GAAhB,CAAoBC,MAAM,IACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,MAAM,CAACC,OAAP,CAAeJ,IAApB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,MAAM,CAACE,IADV,CAFF,CADD,CADD,CAHF,EAaE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,CADJ;AAiBD,CAvBD;;AAwBA,eAAeX,OAAf","sourcesContent":["import Link from 'next/link'\nimport Image from 'next/image'\nimport { gql, useQuery } from '@apollo/client'\nimport dynamic from 'next/dynamic'\nconst Header = dynamic(import('../components/Header'))\n\nconst GET_ME = gql`\nquery {\n  me {\n    name\n    username\n    reviews {\n      body\n      product {\n        name\n        upc\n      }\n    }\n  }\n}\n`;\n\nconst Account = () => {\n  const { loading, error, data } = useQuery(GET_ME);\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  return ( \n      <div>\n      <Header/>\n        <h3>Hello {data.me.name}</h3>\n        <ul>\n        {data.me.reviews.map(review => (\n          <li>\n            <h4>{review.product.name}</h4>\n            <p>\n              {review.body}\n            </p>\n          </li>\n        ))}\n        </ul>\n        <a href=\"/\">Home</a>\n      </div>\n  )\n}\nexport default Account"]},"metadata":{},"sourceType":"module"}