{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/Richard.James2/dev/microfrontends-dapr/accounts-app/client/account/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Richard.James2/dev/microfrontends-dapr/accounts-app/client/account/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery {\\n  me {\\n    name\\n    username\\n    reviews {\\n      body\\n      product {\\n        name\\n        upc\\n      }\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { gql, useQuery } from '@apollo/client';\nimport dynamic from 'next/dynamic';\nvar Header = dynamic(_c = function _c() {\n  return import('../components/Header');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../components/Header')];\n    },\n    modules: ['../components/Header']\n  }\n});\n_c2 = Header;\nvar GET_ME = gql(_templateObject());\n\nvar Account = function Account() {\n  _s();\n\n  var _useQuery = useQuery(GET_ME),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return 'Loading...';\n  if (error) return \"Error! \".concat(error.message, \" \").concat(data);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Hello \", data.me.name), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, data.me.reviews.map(function (review) {\n    return __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, __jsx(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, review.product.name), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, review.body));\n  })), __jsx(\"a\", {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Home\"));\n};\n\n_s(Account, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c3 = Account;\nexport default Account;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Header$dynamic\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Account\");","map":{"version":3,"sources":["/Users/Richard.James2/dev/microfrontends-dapr/accounts-app/client/account/pages/index.js"],"names":["Link","Image","gql","useQuery","dynamic","Header","GET_ME","Account","loading","error","data","message","me","name","reviews","map","review","product","body"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,IAAMC,MAAM,GAAGD,OAAO;AAAA,SAAC,OAAO,sBAAP,CAAD;AAAA;AAAA;AAAA;AAAA,kCAAQ,sBAAR;AAAA;AAAA,cAAQ,sBAAR;AAAA;AAAA,EAAtB;MAAMC,M;AAEN,IAAMC,MAAM,GAAGJ,GAAH,mBAAZ;;AAgBA,IAAMK,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,kBACaJ,QAAQ,CAACG,MAAD,CADrB;AAAA,MACZE,OADY,aACZA,OADY;AAAA,MACHC,KADG,aACHA,KADG;AAAA,MACIC,IADJ,aACIA,IADJ;;AAGpB,MAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,wBAAiBA,KAAK,CAACE,OAAvB,cAAkCD,IAAlC;AAEX,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWA,IAAI,CAACE,EAAL,CAAQC,IAAnB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,IAAI,CAACE,EAAL,CAAQE,OAAR,CAAgBC,GAAhB,CAAoB,UAAAC,MAAM;AAAA,WACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,MAAM,CAACC,OAAP,CAAeJ,IAApB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,MAAM,CAACE,IADV,CAFF,CADyB;AAAA,GAA1B,CADD,CAHF,EAaE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,CADJ;AAiBD,CAvBD;;GAAMX,O;UAC6BJ,Q;;;MAD7BI,O;AAwBN,eAAeA,OAAf","sourcesContent":["import Link from 'next/link'\nimport Image from 'next/image'\nimport { gql, useQuery } from '@apollo/client'\nimport dynamic from 'next/dynamic'\nconst Header = dynamic(import('../components/Header'))\n\nconst GET_ME = gql`\nquery {\n  me {\n    name\n    username\n    reviews {\n      body\n      product {\n        name\n        upc\n      }\n    }\n  }\n}\n`;\n\nconst Account = () => {\n  const { loading, error, data } = useQuery(GET_ME);\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message} ${data}`;\n\n  return ( \n      <div>\n      <Header/>\n        <h3>Hello {data.me.name}</h3>\n        <ul>\n        {data.me.reviews.map(review => (\n          <li>\n            <h4>{review.product.name}</h4>\n            <p>\n              {review.body}\n            </p>\n          </li>\n        ))}\n        </ul>\n        <a href=\"/\">Home</a>\n      </div>\n  )\n}\nexport default Account"]},"metadata":{},"sourceType":"module"}