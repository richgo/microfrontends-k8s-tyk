{"ast":null,"code":"import _extends from \"/Users/Richard.James2/dev/microfrontends-dapr/products-app/client/product/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Richard.James2/dev/microfrontends-dapr/products-app/client/product/pages/_app.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withApollo from 'next-with-apollo';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\n\nvar yup = require('yup');\n\nrequire('dotenv').config();\n\nvar graphUrl = process.env.GRAPH_URL;\n\nvar App = function App(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      apollo = _ref.apollo;\n  return __jsx(ApolloProvider, {\n    client: apollo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  })));\n};\n\n_c = App;\nexport default withApollo(function (_ref2) {\n  var initialState = _ref2.initialState;\n  console.log(graphUrl);\n  console.log(process.env.GRAPH_URL);\n  return new ApolloClient({\n    uri: graphUrl,\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n})(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Richard.James2/dev/microfrontends-dapr/products-app/client/product/pages/_app.js"],"names":["withApollo","ApolloProvider","ApolloClient","InMemoryCache","yup","require","config","graphUrl","process","env","GRAPH_URL","App","Component","pageProps","apollo","initialState","console","log","uri","cache","restore"],"mappings":";;;;;;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,YAAP,IAAuBC,aAAvB,QAA4C,cAA5C;;AACA,IAAMC,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAA3B;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcC,SAAd,QAAcA,SAAd;AAAA,MAAyBC,MAAzB,QAAyBA,MAAzB;AAAA,SACV,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADU;AAAA,CAAZ;;KAAMF,G;AAMN,eAAeX,UAAU,CAAC,iBAAsB;AAAA,MAAnBe,YAAmB,SAAnBA,YAAmB;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACC,GAAR,CAAYC,SAAxB;AACA,SAAO,IAAIR,YAAJ,CAAiB;AACtBgB,IAAAA,GAAG,EAAEX,QADiB;AAEtBY,IAAAA,KAAK,EAAE,IAAIhB,aAAJ,GAAoBiB,OAApB,CAA4BL,YAAY,IAAI,EAA5C;AAFe,GAAjB,CAAP;AAID,CAPwB,CAAV,CAOZJ,GAPY,CAAf","sourcesContent":["import withApollo from 'next-with-apollo';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\nconst yup = require('yup');\nrequire('dotenv').config()\n\nlet graphUrl = process.env.GRAPH_URL\n\nconst App = ({ Component, pageProps, apollo }) => (\n  <ApolloProvider client={apollo}>\n    <Component {...pageProps} />\n  </ApolloProvider>\n);\n \nexport default withApollo(({ initialState }) => {\n  console.log(graphUrl)\n  console.log(process.env.GRAPH_URL)\n  return new ApolloClient({\n    uri: graphUrl,\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n})(App);"]},"metadata":{},"sourceType":"module"}