{"ast":null,"code":"var _jsxFileName = \"/Users/Richard.James2/dev/microfrontends-dapr/products-app/client/product/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport withApollo from 'next-with-apollo';\nimport { ApolloProvider } from \"@apollo/client\";\nimport client from \"../apollo-client\";\n\nconst App = ({\n  Component,\n  pageProps,\n  apollo\n}) => __jsx(ApolloProvider, {\n  client: apollo,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, __jsx(Component, _extends({}, pageProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }\n})));\n\nexport default withApollo(({\n  initialState\n}) => {\n  return new ApolloClient({\n    uri: 'http://graph.fakefurniture.local',\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n})(App);","map":{"version":3,"sources":["/Users/Richard.James2/dev/microfrontends-dapr/products-app/client/product/pages/_app.js"],"names":["withApollo","ApolloProvider","client","App","Component","pageProps","apollo","initialState","ApolloClient","uri","cache","InMemoryCache","restore"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAGA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KACR,MAAC,cAAD;AAAgB,EAAA,MAAM,EAAEA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,CADJ;;AAME,eAAeL,UAAU,CAAC,CAAC;AAAEO,EAAAA;AAAF,CAAD,KAAsB;AAC9C,SAAO,IAAIC,YAAJ,CAAiB;AACpBC,IAAAA,GAAG,EAAE,kCADe;AAEpBC,IAAAA,KAAK,EAAE,IAAIC,aAAJ,GAAoBC,OAApB,CAA4BL,YAAY,IAAI,EAA5C;AAFa,GAAjB,CAAP;AAID,CALwB,CAAV,CAKZJ,GALY,CAAf","sourcesContent":["import withApollo from 'next-with-apollo';\nimport { ApolloProvider } from \"@apollo/client\";\nimport client from \"../apollo-client\";\n\n \nconst App = ({ Component, pageProps, apollo }) => (\n    <ApolloProvider client={apollo}>\n      <Component {...pageProps} />\n    </ApolloProvider>\n  );\n   \n  export default withApollo(({ initialState }) => {\n    return new ApolloClient({\n        uri: 'http://graph.fakefurniture.local',\n        cache: new InMemoryCache().restore(initialState || {})\n    });\n  })(App);"]},"metadata":{},"sourceType":"module"}