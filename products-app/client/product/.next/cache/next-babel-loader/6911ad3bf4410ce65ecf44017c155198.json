{"ast":null,"code":"var _jsxFileName = \"/Users/Richard.James2/dev/microfrontends-dapr/products-app/client/product/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport withApollo from 'next-with-apollo';\nimport { ApolloProvider } from \"@apollo/client\";\nimport client from \"../apollo-client\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default withApollo(({\n  initialState\n}) => {\n  return new ApolloClient({\n    uri: 'http://graph.fakefurniture.local',\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n})(App);","map":{"version":3,"sources":["/Users/Richard.James2/dev/microfrontends-dapr/products-app/client/product/pages/_app.js"],"names":["withApollo","ApolloProvider","client","MyApp","Component","pageProps","initialState","ApolloClient","uri","cache","InMemoryCache","restore","App"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACrC,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD;;AAED,eAAeL,UAAU,CAAC,CAAC;AAAEM,EAAAA;AAAF,CAAD,KAAsB;AAC9C,SAAO,IAAIC,YAAJ,CAAiB;AACtBC,IAAAA,GAAG,EAAE,kCADiB;AAEtBC,IAAAA,KAAK,EAAE,IAAIC,aAAJ,GAAoBC,OAApB,CAA4BL,YAAY,IAAI,EAA5C;AAFe,GAAjB,CAAP;AAID,CALwB,CAAV,CAKZM,GALY,CAAf","sourcesContent":["import withApollo from 'next-with-apollo';\nimport { ApolloProvider } from \"@apollo/client\";\nimport client from \"../apollo-client\";\n\nfunction MyApp({ Component, pageProps }) {\n    return (\n      <ApolloProvider client={client}>\n        <Component {...pageProps} />\n      </ApolloProvider>\n    );\n  }\n\n  export default withApollo(({ initialState }) => {\n    return new ApolloClient({\n      uri: 'http://graph.fakefurniture.local',\n      cache: new InMemoryCache().restore(initialState || {})\n    });\n  })(App);"]},"metadata":{},"sourceType":"module"}