{"ast":null,"code":"var _jsxFileName = \"/Users/Richard.James2/dev/microfrontends-dapr/products-app/client/product/pages/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { gql } from \"@apollo/client\";\nimport client from \"../apollo-client\";\nimport dynamic from 'next/dynamic';\nconst Header = dynamic(() => import('../components/Header'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../components/Header')],\n    modules: ['../components/Header']\n  }\n});\nexport async function getStaticProps() {\n  const {\n    data\n  } = await client.query({\n    query: gql`\n    query {\n      getProduct(upc:\"${context.params.id}\") {\n      name\n      price\n      inStock\n      upc \n      weight\n      shippingEstimate\n      reviews {\n        body\n        author {\n          name\n          username\n          id\n          }\n        }\n      }\n    }\n    `\n  });\n  return {\n    props: {\n      getProduct: data\n    }\n  };\n}\nexport async function getStaticPaths() {\n  return {\n    paths: [],\n    //indicates that no page needs be created at build time\n    fallback: 'blocking' //indicates the type of fallback\n\n  };\n}\n\nconst Product = () => {\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Product \", getProduct.name), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"upc \", data.getProduct.upc), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"price \", data.getProduct.price), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"In Stock \", data.getProduct.inStock), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Reviews\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, data.getProduct.reviews.map(review => __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, review.author.name), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, review.body)))), __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Back to products\")));\n};\n\nexport default Product;","map":{"version":3,"sources":["/Users/Richard.James2/dev/microfrontends-dapr/products-app/client/product/pages/[id].js"],"names":["Link","gql","client","dynamic","Header","getStaticProps","data","query","context","params","id","props","getProduct","getStaticPaths","paths","fallback","Product","loading","error","message","name","upc","price","inStock","reviews","map","review","author","body"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,MAAMC,MAAM,GAAGD,OAAO,OAAC,OAAO,sBAAP,CAAD;AAAA;AAAA,wCAAQ,sBAAR;AAAA,cAAQ,sBAAR;AAAA;AAAA,EAAtB;AAEA,OAAO,eAAeE,cAAf,GAAgC;AAErC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMJ,MAAM,CAACK,KAAP,CAAa;AAClCA,IAAAA,KAAK,EAAEN,GAAI;AACf;AACA,wBAAwBO,OAAO,CAACC,MAAR,CAAeC,EAAG;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBsC,GAAb,CAAvB;AAuBA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEN;AADP;AADF,GAAP;AAKD;AAED,OAAO,eAAeO,cAAf,GAAgC;AAErC,SAAO;AACHC,IAAAA,KAAK,EAAE,EADJ;AACQ;AACXC,IAAAA,QAAQ,EAAE,UAFP,CAEkB;;AAFlB,GAAP;AAID;;AAED,MAAMC,OAAO,GAAG,MAAM;AAEpB,MAAIC,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACC,OAAQ,EAA/B;AAEX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaP,UAAU,CAACQ,IAAxB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQd,IAAI,CAACM,UAAL,CAAgBS,GAAxB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUf,IAAI,CAACM,UAAL,CAAgBU,KAA1B,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAahB,IAAI,CAACM,UAAL,CAAgBW,OAA7B,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,IAAI,CAACM,UAAL,CAAgBY,OAAhB,CAAwBC,GAAxB,CAA4BC,MAAM,IACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,MAAM,CAACC,MAAP,CAAcP,IAAnB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIM,MAAM,CAACE,IAAX,CAFJ,CADD,CADH,CAPF,EAeE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAfF,CADF;AAqBD,CA1BD;;AA2BA,eAAeZ,OAAf","sourcesContent":["import Link from 'next/link'\nimport { gql } from \"@apollo/client\";\nimport client from \"../apollo-client\"\nimport dynamic from 'next/dynamic'\nconst Header = dynamic(import('../components/Header'))\n\nexport async function getStaticProps() {\n\n  const { data } = await client.query({\n    query: gql`\n    query {\n      getProduct(upc:\"${context.params.id}\") {\n      name\n      price\n      inStock\n      upc \n      weight\n      shippingEstimate\n      reviews {\n        body\n        author {\n          name\n          username\n          id\n          }\n        }\n      }\n    }\n    `,\n  });\n\n  return {\n    props: {\n      getProduct: data,\n    },\n };\n}\n\nexport async function getStaticPaths() {\n\n  return {\n      paths: [], //indicates that no page needs be created at build time\n      fallback: 'blocking' //indicates the type of fallback\n  }\n}\n\nconst Product = () => {\n \n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  \n  return (\n    <div>\n    <Header/>\n      <h3>Product {getProduct.name}</h3>\n      <p>upc {data.getProduct.upc}</p>\n      <p>price {data.getProduct.price}</p>\n      <p>In Stock {data.getProduct.inStock}</p>\n      <h4>Reviews</h4>\n      <ul>\n        {data.getProduct.reviews.map(review => (\n          <li>\n              <h5>{review.author.name}</h5>\n              <p>{review.body}</p>\n          </li>\n        ))}\n        </ul>\n      <Link href=\"/\">\n        <a>Back to products</a>\n      </Link>\n    </div>\n  )\n}\nexport default Product"]},"metadata":{},"sourceType":"module"}